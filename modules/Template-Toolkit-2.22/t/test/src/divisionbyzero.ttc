#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1311598108',
        'name' => 'divisionbyzero',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "t/test/src/divisionbyzero"
    $stash->set('a', 420);
#line 1 "t/test/src/divisionbyzero"
    $stash->set('b', 0);
#line 1 "t/test/src/divisionbyzero"
    
    # TRY
    $output .=  do {
        my $output = '';
        my ($_tt_error, $_tt_handler);
        eval {
#line 1 "t/test/src/divisionbyzero"
    $output .=  $stash->get('a') / $stash->get('b');
        };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error if $_tt_error->type =~ /^return|stop$/;
            $stash->set('error', $_tt_error);
            $stash->set('e', $_tt_error);
            if (defined ($_tt_handler = $_tt_error->select_handler())) {
    $_tt_error = 0;
            }
    else {
        # DEFAULT
#line 1 "t/test/src/divisionbyzero"
    $output .=  $stash->get('error');
        $_tt_error = '';
    }
        }
    # FINAL
    die $_tt_error if $_tt_error;
    $output;
    };
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
