#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1311599135',
        'version' => '1.23',
        'name' => 'complex',
        'author' => 'abw',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    
#line 5 "/var/www/cgi-bin/gsignal/development/modules/Template-Toolkit-2.22/t/test/src/complex"
    $output .=  $context->include('header', { 'title' => 'Yet Another Template Test' });
    $output .=  "\nThis is a more complex file which includes some BLOCK definitions\n";
#line 7 "/var/www/cgi-bin/gsignal/development/modules/Template-Toolkit-2.22/t/test/src/complex"
    $output .=  $context->include('footer');
    $output .=  "\n\n";
    
    $output .=  "\n";
    
    $output .=  "\n\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'footer' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "This is the footer, author: ";
#line 14 "/var/www/cgi-bin/gsignal/development/modules/Template-Toolkit-2.22/t/test/src/complex"
        $output .=  $stash->get(['template', 0, 'author', 0]);
        $output .=  ", version: ";
#line 14 "/var/www/cgi-bin/gsignal/development/modules/Template-Toolkit-2.22/t/test/src/complex"
        $output .=  $stash->get(['template', 0, 'version', 0]);
        $output .=  "\n";
#line 1 "/var/www/cgi-bin/gsignal/development/modules/Template-Toolkit-2.22/t/test/src/complex"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = [ 3, 2, 1 ];
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        LOOP:   while (! $_tt_error) {
                    $stash->{'x'} = $_tt_value;
        $output .=  ("- " . $stash->get('x') . " ");;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'header' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "This is the header, title: ";
#line 10 "/var/www/cgi-bin/gsignal/development/modules/Template-Toolkit-2.22/t/test/src/complex"
        $output .=  $stash->get('title');
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
